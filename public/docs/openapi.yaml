openapi: 3.0.3
info:
  title: 'Exercise API Documentation'
  description: 'This is an API for a REST API in laravel. see the github page form more info'
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/customer:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'the page number. Default to 1'
          example: 16
          required: false
          schema:
            type: integer
            description: 'the page number. Default to 1'
            example: 16
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'List data customer'
                  data:
                    current_page: 16
                    data: []
                    first_page_url: 'http://localhost/api/v1/customer?page=1'
                    from: null
                    last_page: 4
                    last_page_url: 'http://localhost/api/v1/customer?page=4'
                    links:
                      -
                        url: 'http://localhost/api/v1/customer?page=15'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/customer?page=1'
                        label: '1'
                        active: false
                      -
                        url: 'http://localhost/api/v1/customer?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://localhost/api/v1/customer?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://localhost/api/v1/customer?page=4'
                        label: '4'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    next_page_url: null
                    path: 'http://localhost/api/v1/customer'
                    per_page: 5
                    prev_page_url: 'http://localhost/api/v1/customer?page=15'
                    to: null
                    total: 16
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'List data customer'
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 16
                      data:
                        type: array
                        example: []
                      first_page_url:
                        type: string
                        example: 'http://localhost/api/v1/customer?page=1'
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 4
                      last_page_url:
                        type: string
                        example: 'http://localhost/api/v1/customer?page=4'
                      links:
                        type: array
                        example:
                          -
                            url: 'http://localhost/api/v1/customer?page=15'
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/customer?page=1'
                            label: '1'
                            active: false
                          -
                            url: 'http://localhost/api/v1/customer?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://localhost/api/v1/customer?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://localhost/api/v1/customer?page=4'
                            label: '4'
                            active: false
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: 'http://localhost/api/v1/customer?page=15'
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        example: null
                      path:
                        type: string
                        example: 'http://localhost/api/v1/customer'
                      per_page:
                        type: integer
                        example: 5
                      prev_page_url:
                        type: string
                        example: 'http://localhost/api/v1/customer?page=15'
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 16
      tags:
        - Endpoints
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Data customer baru berhasil ditambah'
                  data:
                    name: possimus
                    address: ullam
                    updated_at: '2023-11-24T10:54:15.000000Z'
                    created_at: '2023-11-24T10:54:15.000000Z'
                    id: 40
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Data customer baru berhasil ditambah'
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: possimus
                      address:
                        type: string
                        example: ullam
                      updated_at:
                        type: string
                        example: '2023-11-24T10:54:15.000000Z'
                      created_at:
                        type: string
                        example: '2023-11-24T10:54:15.000000Z'
                      id:
                        type: integer
                        example: 40
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: possimus
                address:
                  type: string
                  description: ''
                  example: ullam
              required:
                - name
                - address
  '/api/v1/customer/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Berikut adalah data customer yang diminta'
                  data:
                    id: 1
                    name: 'Zelda Gaylord'
                    address: "37473 Mayert Drive\nKobyburgh, KY 36186"
                    created_at: '2023-11-14T08:11:58.000000Z'
                    updated_at: '2023-11-14T08:11:58.000000Z'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Berikut adalah data customer yang diminta'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Zelda Gaylord'
                      address:
                        type: string
                        example: "37473 Mayert Drive\nKobyburgh, KY 36186"
                      created_at:
                        type: string
                        example: '2023-11-14T08:11:58.000000Z'
                      updated_at:
                        type: string
                        example: '2023-11-14T08:11:58.000000Z'
      tags:
        - Endpoints
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Data customer berhasil diubah'
                  data:
                    id: 1
                    name: magnam
                    address: voluptatibus
                    created_at: '2023-11-14T08:11:58.000000Z'
                    updated_at: '2023-11-24T10:54:15.000000Z'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Data customer berhasil diubah'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: magnam
                      address:
                        type: string
                        example: voluptatibus
                      created_at:
                        type: string
                        example: '2023-11-14T08:11:58.000000Z'
                      updated_at:
                        type: string
                        example: '2023-11-24T10:54:15.000000Z'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: magnam
                address:
                  type: string
                  description: ''
                  example: voluptatibus
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Data customer berhasil dihapus'
                  data: null
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Data customer berhasil dihapus'
                  data:
                    type: string
                    example: null
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'id of customer.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/login:
    post:
      summary: 'A Login function to receive your authorization token'
      operationId: aLoginFunctionToReceiveYourAuthorizationToken
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Login successful. Welcome!'
                  data:
                    access_token: 49|FdO5G4ck2m5O6UjtxAI003N3xaBCtaWJgrkWkZVCf11a78e3
                    token_type: Bearer
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Login successful. Welcome!'
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: 49|FdO5G4ck2m5O6UjtxAI003N3xaBCtaWJgrkWkZVCf11a78e3
                      token_type:
                        type: string
                        example: Bearer
      tags:
        - 'User Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'your email used to make account.'
                  example: scribe.bot@example.com
                password:
                  type: string
                  description: 'your password used then making the account.'
                  example: password
              required:
                - email
                - password
      security: []
  /api/v1/register:
    post:
      summary: 'A Register function to add account to the system'
      operationId: aRegisterFunctionToAddAccountToTheSystem
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'User created successfully'
                  data:
                    user:
                      name: zibjwmvof
                      email: amanda82@example.com
                      updated_at: '2023-11-24T10:54:15.000000Z'
                      created_at: '2023-11-24T10:54:15.000000Z'
                      id: 31
                    auth:
                      access_token: 50|vSAH9JwCnyIM4ugHId86vJGspkAZkGdMX7Fc7RsI57744602
                      token_type: Bearer
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'User created successfully'
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          name:
                            type: string
                            example: zibjwmvof
                          email:
                            type: string
                            example: amanda82@example.com
                          updated_at:
                            type: string
                            example: '2023-11-24T10:54:15.000000Z'
                          created_at:
                            type: string
                            example: '2023-11-24T10:54:15.000000Z'
                          id:
                            type: integer
                            example: 31
                      auth:
                        type: object
                        properties:
                          access_token:
                            type: string
                            example: 50|vSAH9JwCnyIM4ugHId86vJGspkAZkGdMX7Fc7RsI57744602
                          token_type:
                            type: string
                            example: Bearer
      tags:
        - 'User Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zibjwmvof
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: amanda82@example.com
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'v`?esoh\2h=ui]kti3;'
              required:
                - name
                - email
                - password
      security: []
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'User Authentication'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
